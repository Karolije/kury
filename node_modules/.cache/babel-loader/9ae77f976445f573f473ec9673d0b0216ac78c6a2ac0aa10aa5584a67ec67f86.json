{"ast":null,"code":"var _jsxFileName = \"/Users/karolinaj/Desktop/kury/src/components/EggForm/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactions } from '../../features/transactions/TransactionsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EggForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const today = new Date().toISOString().split('T')[0];\n  const [formData, setFormData] = useState({\n    quantity: '',\n    date: today\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.quantity || !formData.date) {\n      alert('Uzupełnij wszystkie wymagane pola');\n      return;\n    }\n    const entry = {\n      id: uuidv4(),\n      type: 'collected',\n      amount: parseInt(formData.quantity),\n      date: formData.date\n    };\n    try {\n      await fetch('https://chicken-api-yqol.onrender.com/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(entry)\n      });\n      dispatch(fetchTransactions()); // Odśwież dane w Reduxie\n\n      setFormData({\n        quantity: '',\n        date: today\n      });\n    } catch (err) {\n      console.error('Błąd przy zapisie', err);\n      alert('Nie udało się zapisać danych');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"transaction-form glass-box\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zebrane jajka\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Ilo\\u015B\\u0107 *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quantity\",\n        type: \"number\",\n        name: \"quantity\",\n        value: formData.quantity,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Data *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        value: formData.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Zapisz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(EggForm, \"wzol1GL1/Y+EXGflCcS8+KuFCZI=\", false, function () {\n  return [useDispatch];\n});\n_c = EggForm;\nexport default EggForm;\nvar _c;\n$RefreshReg$(_c, \"EggForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","useDispatch","fetchTransactions","jsxDEV","_jsxDEV","EggForm","_s","dispatch","today","Date","toISOString","split","formData","setFormData","quantity","date","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","alert","entry","id","type","amount","parseInt","fetch","method","headers","body","JSON","stringify","err","console","error","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","required","_c","$RefreshReg$"],"sources":["/Users/karolinaj/Desktop/kury/src/components/EggForm/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactions } from '../../features/transactions/TransactionsSlice';\n\nconst EggForm = () => {\n  const dispatch = useDispatch();\n  const today = new Date().toISOString().split('T')[0];\n\n  const [formData, setFormData] = useState({\n    quantity: '',\n    date: today,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.quantity || !formData.date) {\n      alert('Uzupełnij wszystkie wymagane pola');\n      return;\n    }\n\n    const entry = {\n      id: uuidv4(),\n      type: 'collected',\n      amount: parseInt(formData.quantity),\n      date: formData.date,\n    };\n\n    try {\n      await fetch('https://chicken-api-yqol.onrender.com/transactions', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(entry),\n      });\n\n      dispatch(fetchTransactions()); // Odśwież dane w Reduxie\n\n      setFormData({\n        quantity: '',\n        date: today,\n      });\n    } catch (err) {\n      console.error('Błąd przy zapisie', err);\n      alert('Nie udało się zapisać danych');\n    }\n  };\n\n  return (\n    <form className=\"transaction-form glass-box\" onSubmit={handleSubmit}>\n      <h2>Zebrane jajka</h2>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"quantity\">Ilość *</label>\n        <input\n          id=\"quantity\"\n          type=\"number\"\n          name=\"quantity\"\n          value={formData.quantity}\n          onChange={handleChange}\n          required\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"date\">Data *</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          value={formData.date}\n          onChange={handleChange}\n          required\n        />\n      </div>\n\n      <div className=\"form-actions\">\n        <button type=\"submit\">Zapisz</button>\n      </div>\n    </form>\n  );\n};\n\nexport default EggForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}