{"ast":null,"code":"export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"portfolioState\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.warn(\"Błąd podczas wczytywania stanu z localStorage\", err);\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"portfolioState\", serializedState);\n  } catch (err) {\n    console.warn(\"Błąd podczas zapisywania stanu do localStorage\", err);\n  }\n};","map":{"version":3,"names":["loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","warn","saveState","state","stringify","setItem"],"sources":["/Users/karolinaj/Desktop/kury/src/utils/localStorage.js"],"sourcesContent":["export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"portfolioState\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.warn(\"Błąd podczas wczytywania stanu z localStorage\", err);\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"portfolioState\", serializedState);\n  } catch (err) {\n    console.warn(\"Błąd podczas zapisywania stanu do localStorage\", err);\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAC7B,IAAI;IACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC9D,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC5B,OAAOG,SAAS;IAClB;IACA,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,+CAA+C,EAAEF,GAAG,CAAC;IAClE,OAAOH,SAAS;EAClB;AACF,CAAC;AAED,OAAO,MAAMM,SAAS,GAAIC,KAAK,IAAK;EAClC,IAAI;IACF,MAAMV,eAAe,GAAGI,IAAI,CAACO,SAAS,CAACD,KAAK,CAAC;IAC7CT,YAAY,CAACW,OAAO,CAAC,gBAAgB,EAAEZ,eAAe,CAAC;EACzD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,gDAAgD,EAAEF,GAAG,CAAC;EACrE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}