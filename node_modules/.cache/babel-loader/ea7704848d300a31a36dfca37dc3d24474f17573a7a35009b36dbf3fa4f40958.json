{"ast":null,"code":"var _jsxFileName = \"/Users/karolinaj/Desktop/kury/src/components/charts/EggChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { fetchTransactions } from '../../features/transactions/TransactionsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EggChart = () => {\n  _s();\n  const dispatch = useDispatch();\n  const transactions = useSelector(state => state.transactions.items); // zakładam, że tam masz dane\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    dispatch(fetchTransactions());\n  }, [dispatch]);\n  useEffect(() => {\n    if (!transactions) return;\n\n    // grupowanie po dacie tylko jajek (collected/sold)\n    const grouped = {};\n    transactions.forEach(item => {\n      if (item.type === 'collected' || item.type === 'sold') {\n        if (!grouped[item.date]) {\n          grouped[item.date] = {\n            date: item.date,\n            collected: 0,\n            sold: 0\n          };\n        }\n        if (item.type === 'collected') {\n          grouped[item.date].collected += item.amount;\n        } else if (item.type === 'sold') {\n          grouped[item.date].sold += item.amount;\n        }\n      }\n    });\n    const result = Object.values(grouped).sort((a, b) => a.date.localeCompare(b.date));\n    setData(result);\n  }, [transactions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"glass-box\",\n    style: {\n      height: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Podsumowanie jajek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"collected\",\n          fill: \"#82ca9d\",\n          name: \"Zebrane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"sold\",\n          fill: \"#8884d8\",\n          name: \"Sprzedane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EggChart, \"oxELpPVFXgY1KvaW3+NSvZicbCk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EggChart;\nexport default EggChart;\nvar _c;\n$RefreshReg$(_c, \"EggChart\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","fetchTransactions","jsxDEV","_jsxDEV","EggChart","_s","dispatch","transactions","state","items","data","setData","grouped","forEach","item","type","date","collected","sold","amount","result","Object","values","sort","a","b","localeCompare","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","width","strokeDasharray","dataKey","fill","name","_c","$RefreshReg$"],"sources":["/Users/karolinaj/Desktop/kury/src/components/charts/EggChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport { fetchTransactions } from '../../features/transactions/TransactionsSlice';\n\nconst EggChart = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector((state) => state.transactions.items); // zakładam, że tam masz dane\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchTransactions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!transactions) return;\n\n    // grupowanie po dacie tylko jajek (collected/sold)\n    const grouped = {};\n\n    transactions.forEach((item) => {\n      if (item.type === 'collected' || item.type === 'sold') {\n        if (!grouped[item.date]) {\n          grouped[item.date] = { date: item.date, collected: 0, sold: 0 };\n        }\n        if (item.type === 'collected') {\n          grouped[item.date].collected += item.amount;\n        } else if (item.type === 'sold') {\n          grouped[item.date].sold += item.amount;\n        }\n      }\n    });\n\n    const result = Object.values(grouped).sort((a, b) => a.date.localeCompare(b.date));\n    setData(result);\n  }, [transactions]);\n\n  return (\n    <div className=\"glass-box\" style={{ height: 300 }}>\n      <h2>Podsumowanie jajek</h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"collected\" fill=\"#82ca9d\" name=\"Zebrane\" />\n          <Bar dataKey=\"sold\" fill=\"#8884d8\" name=\"Sprzedane\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default EggChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}