{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst API_URL = \"http://localhost:3001/transactions\";\nexport const fetchTransactions = createAsyncThunk(\"transactions/fetchTransactions\", async () => {\n  const res = await fetch(API_URL);\n  return await res.json();\n});\nexport const addTransaction = createAsyncThunk(\"transactions/addTransaction\", async transaction => {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(transaction)\n  });\n  return await res.json();\n});\nexport const deleteTransaction = createAsyncThunk(\"transactions/deleteTransaction\", async id => {\n  await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\"\n  });\n  return id;\n});\nconst TransactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    transactions: [],\n    status: \"idle\"\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTransactions.fulfilled, (state, action) => {\n      state.transactions = action.payload;\n      state.status = \"succeeded\";\n    }).addCase(addTransaction.fulfilled, (state, action) => {\n      state.transactions.unshift(action.payload);\n    }).addCase(deleteTransaction.fulfilled, (state, action) => {\n      state.transactions = state.transactions.filter(t => t.id !== action.payload);\n    });\n  }\n});\nexport default TransactionsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","fetchTransactions","res","fetch","json","addTransaction","transaction","method","headers","body","JSON","stringify","deleteTransaction","id","TransactionsSlice","name","initialState","transactions","status","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","unshift","filter","t","reducer"],"sources":["/Users/karolinaj/Desktop/kury/src/features/transactions/TransactionsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_URL = \"http://localhost:3001/transactions\";\n\nexport const fetchTransactions = createAsyncThunk(\n  \"transactions/fetchTransactions\",\n  async () => {\n    const res = await fetch(API_URL);\n    return await res.json();\n  }\n);\n\nexport const addTransaction = createAsyncThunk(\n  \"transactions/addTransaction\",\n  async (transaction) => {\n    const res = await fetch(API_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(transaction),\n    });\n    return await res.json();\n  }\n);\n\nexport const deleteTransaction = createAsyncThunk(\n  \"transactions/deleteTransaction\",\n  async (id) => {\n    await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\n    return id;\n  }\n);\n\nconst TransactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    transactions: [],\n    status: \"idle\",\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchTransactions.fulfilled, (state, action) => {\n        state.transactions = action.payload;\n        state.status = \"succeeded\";\n      })\n      .addCase(addTransaction.fulfilled, (state, action) => {\n        state.transactions.unshift(action.payload);\n      })\n      .addCase(deleteTransaction.fulfilled, (state, action) => {\n        state.transactions = state.transactions.filter(\n          (t) => t.id !== action.payload\n        );\n      });\n  },\n});\n\nexport default TransactionsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC/C,gCAAgC,EAChC,YAAY;EACV,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EAChC,OAAO,MAAME,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC5C,6BAA6B,EAC7B,MAAOO,WAAW,IAAK;EACrB,MAAMJ,GAAG,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;IAC/BO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;EAClC,CAAC,CAAC;EACF,OAAO,MAAMJ,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAGb,gBAAgB,CAC/C,gCAAgC,EAChC,MAAOc,EAAE,IAAK;EACZ,MAAMV,KAAK,CAAC,GAAGH,OAAO,IAAIa,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAS,CAAC,CAAC;EACrD,OAAOM,EAAE;AACX,CACF,CAAC;AAED,MAAMC,iBAAiB,GAAGhB,WAAW,CAAC;EACpCiB,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,iBAAiB,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACP,YAAY,GAAGQ,MAAM,CAACC,OAAO;MACnCF,KAAK,CAACN,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACjB,cAAc,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACP,YAAY,CAACU,OAAO,CAACF,MAAM,CAACC,OAAO,CAAC;IAC5C,CAAC,CAAC,CACDJ,OAAO,CAACV,iBAAiB,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACP,YAAY,GAAGO,KAAK,CAACP,YAAY,CAACW,MAAM,CAC3CC,CAAC,IAAKA,CAAC,CAAChB,EAAE,KAAKY,MAAM,CAACC,OACzB,CAAC;IACH,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,iBAAiB,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}